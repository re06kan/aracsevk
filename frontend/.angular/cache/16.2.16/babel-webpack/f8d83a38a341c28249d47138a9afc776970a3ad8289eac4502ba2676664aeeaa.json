{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nclass VehicleService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrl = environment.apiUrl + '/vehicles';\n  }\n  getHeaders() {\n    const token = this.authService.getToken();\n    console.log('Token for vehicle request:', token);\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n  }\n  mapToVehicle(rawVehicle) {\n    console.log('Mapping raw vehicle:', rawVehicle);\n    return {\n      plate: rawVehicle.plate,\n      brand: rawVehicle.brand,\n      model: rawVehicle.model,\n      status: rawVehicle.status\n    };\n  }\n  getVehicles() {\n    console.log('Fetching vehicles from:', this.apiUrl);\n    console.log('Current token:', this.authService.getToken());\n    return this.http.get(this.apiUrl, {\n      headers: this.getHeaders(),\n      observe: 'response' // Tam yanıtı almak için\n    }).pipe(map(response => {\n      console.log('Full response:', response);\n      return response.body || [];\n    }), map(vehicles => vehicles.map(this.mapToVehicle)), tap(vehicles => console.log('Fetched vehicles:', vehicles)), catchError(error => {\n      console.error('Vehicle fetch error:', error);\n      console.error('Error details:', {\n        status: error.status,\n        message: error.message,\n        url: this.apiUrl,\n        headers: error.headers\n      });\n      // Hata durumunda boş array döndür\n      return of([]);\n    }));\n  }\n  getVehicleStats() {\n    console.log('Fetching vehicle stats from:', this.apiUrl + '/stats');\n    return this.http.get(this.apiUrl + '/stats', {\n      headers: this.getHeaders()\n    }).pipe(tap(stats => console.log('Vehicle stats:', stats)), catchError(error => {\n      console.error('Vehicle stats error:', error);\n      // Hata durumunda default istatistikler\n      return of({\n        total: 0,\n        ready: 0,\n        onDuty: 0,\n        longRoute: 0,\n        standby: 0\n      });\n    }));\n  }\n  static {\n    this.ɵfac = function VehicleService_Factory(t) {\n      return new (t || VehicleService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: VehicleService,\n      factory: VehicleService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { VehicleService };","map":{"version":3,"names":["HttpHeaders","of","catchError","map","tap","environment","VehicleService","constructor","http","authService","apiUrl","getHeaders","token","getToken","console","log","mapToVehicle","rawVehicle","plate","brand","model","status","getVehicles","get","headers","observe","pipe","response","body","vehicles","error","message","url","getVehicleStats","stats","total","ready","onDuty","longRoute","standby","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\work\\aracsevk\\frontend\\src\\app\\services\\vehicle.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Vehicle } from '../models/vehicle.model';\nimport { AuthService } from './auth.service';\n\nexport interface VehicleStats {\n  total: number;\n  ready: number;\n  onDuty: number;\n  longRoute: number;\n  standby: number;\n}\n\ninterface RawVehicle {\n  plate: string;\n  brand: string;\n  model: string;\n  status: 'MUSAIT' | 'GOREVDE' | 'UZUN_YOLDA' | 'KADEMEDE';\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VehicleService {\n  private apiUrl = environment.apiUrl + '/vehicles';\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService\n  ) {}\n\n  private getHeaders(): HttpHeaders {\n    const token = this.authService.getToken();\n    console.log('Token for vehicle request:', token);\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n  }\n\n  private mapToVehicle(rawVehicle: RawVehicle): Vehicle {\n    console.log('Mapping raw vehicle:', rawVehicle);\n    return {\n      plate: rawVehicle.plate,\n      brand: rawVehicle.brand,\n      model: rawVehicle.model,\n      status: rawVehicle.status\n    };\n  }\n\n  getVehicles(): Observable<Vehicle[]> {\n    console.log('Fetching vehicles from:', this.apiUrl);\n    console.log('Current token:', this.authService.getToken());\n    \n    return this.http.get<RawVehicle[]>(this.apiUrl, { \n      headers: this.getHeaders(),\n      observe: 'response'  // Tam yanıtı almak için\n    }).pipe(\n      map(response => {\n        console.log('Full response:', response);\n        return response.body || [];\n      }),\n      map(vehicles => vehicles.map(this.mapToVehicle)),\n      tap(vehicles => console.log('Fetched vehicles:', vehicles)),\n      catchError(error => {\n        console.error('Vehicle fetch error:', error);\n        console.error('Error details:', {\n          status: error.status,\n          message: error.message,\n          url: this.apiUrl,\n          headers: error.headers\n        });\n        // Hata durumunda boş array döndür\n        return of([]);\n      })\n    );\n  }\n\n  getVehicleStats(): Observable<VehicleStats> {\n    console.log('Fetching vehicle stats from:', this.apiUrl + '/stats');\n    return this.http.get<VehicleStats>(this.apiUrl + '/stats', { \n      headers: this.getHeaders() \n    }).pipe(\n      tap(stats => console.log('Vehicle stats:', stats)),\n      catchError(error => {\n        console.error('Vehicle stats error:', error);\n        // Hata durumunda default istatistikler\n        return of({\n          total: 0,\n          ready: 0,\n          onDuty: 0,\n          longRoute: 0,\n          standby: 0\n        });\n      })\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}