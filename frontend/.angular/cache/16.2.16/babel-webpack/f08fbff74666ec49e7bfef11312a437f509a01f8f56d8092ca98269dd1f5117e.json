{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass VehicleService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl + '/vehicles';\n  }\n  getVehicles() {\n    return this.http.get(this.apiUrl).pipe(catchError(error => {\n      console.error('Vehicle fetch error', error);\n      // Hata durumunda mock veriler\n      return of([{\n        plate: '34ABC123',\n        model: 'Mercedes Sprinter',\n        status: 'hazır'\n      }, {\n        plate: '34XYZ456',\n        model: 'Ford Transit',\n        status: 'görevde'\n      }, {\n        plate: '35DEF789',\n        model: 'Volkswagen Crafter',\n        status: 'hazır'\n      }, {\n        plate: '06GHI234',\n        model: 'Renault Master',\n        status: 'görevde'\n      }, {\n        plate: '16JKL567',\n        model: 'Fiat Ducato',\n        status: 'hazır'\n      }]);\n    }));\n  }\n  getVehicleStats() {\n    return this.http.get(this.apiUrl + '/stats').pipe(catchError(error => {\n      console.error('Vehicle stats fetch error', error);\n      // Hata durumunda varsayılan istatistikler\n      return of({\n        total: 5,\n        ready: 3,\n        onDuty: 2,\n        longRoute: 0,\n        standby: 0\n      });\n    }));\n  }\n  static {\n    this.ɵfac = function VehicleService_Factory(t) {\n      return new (t || VehicleService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: VehicleService,\n      factory: VehicleService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { VehicleService };","map":{"version":3,"names":["of","catchError","environment","VehicleService","constructor","http","apiUrl","getVehicles","get","pipe","error","console","plate","model","status","getVehicleStats","total","ready","onDuty","longRoute","standby","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\work\\aracsevk\\frontend\\src\\app\\services\\vehicle.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Vehicle } from '../models/vehicle.model';\n\nexport interface VehicleStats {\n  total: number;\n  ready: number;\n  onDuty: number;\n  longRoute: number;\n  standby: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VehicleService {\n  private apiUrl = environment.apiUrl + '/vehicles';\n\n  constructor(private http: HttpClient) {}\n\n  getVehicles(): Observable<Vehicle[]> {\n    return this.http.get<Vehicle[]>(this.apiUrl).pipe(\n      catchError(error => {\n        console.error('Vehicle fetch error', error);\n        // Hata durumunda mock veriler\n        return of([\n          { plate: '34ABC123', model: 'Mercedes Sprinter', status: 'hazır' },\n          { plate: '34XYZ456', model: 'Ford Transit', status: 'görevde' },\n          { plate: '35DEF789', model: 'Volkswagen Crafter', status: 'hazır' },\n          { plate: '06GHI234', model: 'Renault Master', status: 'görevde' },\n          { plate: '16JKL567', model: 'Fiat Ducato', status: 'hazır' }\n        ] as Vehicle[]);\n      })\n    );\n  }\n\n  getVehicleStats(): Observable<VehicleStats> {\n    return this.http.get<VehicleStats>(this.apiUrl + '/stats').pipe(\n      catchError(error => {\n        console.error('Vehicle stats fetch error', error);\n        // Hata durumunda varsayılan istatistikler\n        return of({\n          total: 5,\n          ready: 3,\n          onDuty: 2,\n          longRoute: 0,\n          standby: 0\n        });\n      })\n    );\n  }\n}\n"],"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,UAAU,QAAa,gBAAgB;AAChD,SAASC,WAAW,QAAQ,gCAAgC;;;AAW5D,MAGaC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAGJ,WAAW,CAACI,MAAM,GAAG,WAAW;EAEV;EAEvCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC,CAACG,IAAI,CAC/CR,UAAU,CAACS,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C;MACA,OAAOV,EAAE,CAAC,CACR;QAAEY,KAAK,EAAE,UAAU;QAAEC,KAAK,EAAE,mBAAmB;QAAEC,MAAM,EAAE;MAAO,CAAE,EAClE;QAAEF,KAAK,EAAE,UAAU;QAAEC,KAAK,EAAE,cAAc;QAAEC,MAAM,EAAE;MAAS,CAAE,EAC/D;QAAEF,KAAK,EAAE,UAAU;QAAEC,KAAK,EAAE,oBAAoB;QAAEC,MAAM,EAAE;MAAO,CAAE,EACnE;QAAEF,KAAK,EAAE,UAAU;QAAEC,KAAK,EAAE,gBAAgB;QAAEC,MAAM,EAAE;MAAS,CAAE,EACjE;QAAEF,KAAK,EAAE,UAAU;QAAEC,KAAK,EAAE,aAAa;QAAEC,MAAM,EAAE;MAAO,CAAE,CAChD,CAAC;IACjB,CAAC,CAAC,CACH;EACH;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAe,IAAI,CAACF,MAAM,GAAG,QAAQ,CAAC,CAACG,IAAI,CAC7DR,UAAU,CAACS,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD;MACA,OAAOV,EAAE,CAAC;QACRgB,KAAK,EAAE,CAAC;QACRC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE,CAAC;QACTC,SAAS,EAAE,CAAC;QACZC,OAAO,EAAE;OACV,CAAC;IACJ,CAAC,CAAC,CACH;EACH;;;uBAnCWjB,cAAc,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdrB,cAAc;MAAAsB,OAAA,EAAdtB,cAAc,CAAAuB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA;;SAEPxB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}