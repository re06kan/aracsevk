{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/auth.service\";\nclass AuthGuard {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n  canActivate(route, state) {\n    const currentUser = this.authService.currentUserValue;\n    if (currentUser) {\n      // Kullanıcı giriş yapmış\n      // Rol kontrolü yapılabilir\n      return true;\n    }\n    // Giriş yapılmamış, login sayfasına yönlendir\n    this.router.navigate(['/giris'], {\n      queryParams: {\n        returnUrl: state.url\n      }\n    });\n    return false;\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","router","authService","canActivate","route","state","currentUser","currentUserValue","navigate","queryParams","returnUrl","url","i0","ɵɵinject","i1","Router","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\work\\aracsevk\\frontend\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const currentUser = this.authService.currentUserValue;\n    \n    if (currentUser) {\n      // Kullanıcı giriş yapmış\n      // Rol kontrolü yapılabilir\n      return true;\n    }\n    \n    // Giriş yapılmamış, login sayfasına yönlendir\n    this.router.navigate(['/giris'], { \n      queryParams: { returnUrl: state.url } \n    });\n    return false;\n  }\n}\n"],"mappings":";;;AAIA,MAGaA,SAAS;EACpBC,YACUC,MAAc,EACdC,WAAwB;IADxB,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;EAClB;EAEHC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACnE,MAAMC,WAAW,GAAG,IAAI,CAACJ,WAAW,CAACK,gBAAgB;IAErD,IAAID,WAAW,EAAE;MACf;MACA;MACA,OAAO,IAAI;;IAGb;IACA,IAAI,CAACL,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;MAC/BC,WAAW,EAAE;QAAEC,SAAS,EAAEL,KAAK,CAACM;MAAG;KACpC,CAAC;IACF,OAAO,KAAK;EACd;;;uBApBWZ,SAAS,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAATlB,SAAS;MAAAmB,OAAA,EAATnB,SAAS,CAAAoB,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA;;SAEPrB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}