{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n    this.currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser') || 'null'));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n  get currentUserValue() {\n    return this.currentUserSubject.value;\n  }\n  login(username, password) {\n    return this.http.post('/api/login', {\n      username,\n      password\n    }).pipe(map(user => {\n      localStorage.setItem('currentUser', JSON.stringify(user));\n      this.currentUserSubject.next(user);\n      return user;\n    }));\n  }\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n  register(user) {\n    return this.http.post('/api/register', user);\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { AuthService };","map":{"version":3,"names":["BehaviorSubject","map","AuthService","constructor","http","currentUserSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","currentUserValue","value","login","username","password","post","pipe","user","setItem","stringify","next","logout","removeItem","register","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\work\\aracsevk\\frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface User {\n  id?: number;\n  username: string;\n  ad: string;\n  soyad: string;\n  token?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private currentUserSubject: BehaviorSubject<User | null>;\n  public currentUser: Observable<User | null>;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User | null>(\n      JSON.parse(localStorage.getItem('currentUser') || 'null')\n    );\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User | null {\n    return this.currentUserSubject.value;\n  }\n\n  login(username: string, password: string) {\n    return this.http.post<any>('/api/login', { username, password })\n      .pipe(map(user => {\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n\n  register(user: User) {\n    return this.http.post('/api/register', user);\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;AAClD,SAASC,GAAG,QAAQ,gBAAgB;;;AAWpC,MAGaC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,kBAAkB,GAAG,IAAIL,eAAe,CAC3CM,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAI,MAAM,CAAC,CAC1D;IACD,IAAI,CAACC,WAAW,GAAG,IAAI,CAACL,kBAAkB,CAACM,YAAY,EAAE;EAC3D;EAEA,IAAWC,gBAAgBA,CAAA;IACzB,OAAO,IAAI,CAACP,kBAAkB,CAACQ,KAAK;EACtC;EAEAC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAM,YAAY,EAAE;MAAEF,QAAQ;MAAEC;IAAQ,CAAE,CAAC,CAC7DE,IAAI,CAACjB,GAAG,CAACkB,IAAI,IAAG;MACfX,YAAY,CAACY,OAAO,CAAC,aAAa,EAAEd,IAAI,CAACe,SAAS,CAACF,IAAI,CAAC,CAAC;MACzD,IAAI,CAACd,kBAAkB,CAACiB,IAAI,CAACH,IAAI,CAAC;MAClC,OAAOA,IAAI;IACb,CAAC,CAAC,CAAC;EACP;EAEAI,MAAMA,CAAA;IACJf,YAAY,CAACgB,UAAU,CAAC,aAAa,CAAC;IACtC,IAAI,CAACnB,kBAAkB,CAACiB,IAAI,CAAC,IAAI,CAAC;EACpC;EAEAG,QAAQA,CAACN,IAAU;IACjB,OAAO,IAAI,CAACf,IAAI,CAACa,IAAI,CAAC,eAAe,EAAEE,IAAI,CAAC;EAC9C;;;uBA/BWjB,WAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAX3B,WAAW;MAAA4B,OAAA,EAAX5B,WAAW,CAAA6B,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA;;SAEP9B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}