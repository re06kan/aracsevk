{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { GirisComponent } from './components/giris/giris.component';\nimport { KayitComponent } from './components/kayit/kayit.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  redirectTo: '/giris',\n  pathMatch: 'full'\n}, {\n  path: 'giris',\n  component: GirisComponent\n}, {\n  path: 'kayit',\n  component: KayitComponent\n}, {\n  path: 'dashboard',\n  component: DashboardComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '**',\n  redirectTo: '/giris'\n}];\nclass AppRoutingModule {\n  static {\n    this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n}\nexport { AppRoutingModule };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","GirisComponent","KayitComponent","DashboardComponent","AuthGuard","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["C:\\work\\aracsevk\\frontend\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GirisComponent } from './components/giris/giris.component';\nimport { KayitComponent } from './components/kayit/kayit.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  { \n    path: '', \n    redirectTo: '/giris', \n    pathMatch: 'full' \n  },\n  { \n    path: 'giris', \n    component: GirisComponent \n  },\n  { \n    path: 'kayit', \n    component: KayitComponent \n  },\n  { \n    path: 'dashboard', \n    component: DashboardComponent, \n    canActivate: [AuthGuard] \n  },\n  {\n    path: '**', \n    redirectTo: '/giris'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,kBAAkB,QAAQ,4CAA4C;AAC/E,SAASC,SAAS,QAAQ,qBAAqB;;;AAE/C,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,QAAQ;EACpBC,SAAS,EAAE;CACZ,EACD;EACEF,IAAI,EAAE,OAAO;EACbG,SAAS,EAAER;CACZ,EACD;EACEK,IAAI,EAAE,OAAO;EACbG,SAAS,EAAEP;CACZ,EACD;EACEI,IAAI,EAAE,WAAW;EACjBG,SAAS,EAAEN,kBAAkB;EAC7BO,WAAW,EAAE,CAACN,SAAS;CACxB,EACD;EACEE,IAAI,EAAE,IAAI;EACVC,UAAU,EAAE;CACb,CACF;AAED,MAIaI,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAHjBX,YAAY,CAACY,OAAO,CAACP,MAAM,CAAC,EAC5BL,YAAY;IAAA;EAAA;;SAEXW,gBAAgB;;2EAAhBA,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAd,YAAA;IAAAe,OAAA,GAFjBf,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}